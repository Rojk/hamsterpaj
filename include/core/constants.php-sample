<?php
/*
	################################################################
	This file serves as an example for how the constants.php file 
	should look in a production environment.

	constants.php is in .gitignore and thus is not versioned. Make 
	sure to reflect all structural changes to your constants.php 
	file in this file, and vice versa.

	If you make a change to this sample file, it's a good idea to 
	mention it in your commit message, so other developer's can 
	update their constants.php files.
	################################################################
*/

	$paths_logs					= '/var/log/hamsterpaj/'; // Where you wish to save the logs generated by Hamsterpajs log-functions. Example for your enironment is: /home/user/log/. Remember that apache needs writing permissions to this folder.
	$paths_images_old			= '/mnt/images/images/';	// File path to images. This is the old images/images on hamsterpaj.
	$paths_images 				= '/mnt/images/';	// File path to the current images directory.
	$paths_static				= '/mnt/static/';	// File path to static, containing Images and compressed JS and CSS.
	$url_images_old			= 'http://images.hamsterpaj.net/';	// URL to the old images folder d.v.s images.hamsterpaj.net
	$url_images					= 'http://static.hamsterpaj.net/images/'; // URL to images folder. This content is fetched from the hamsterpaj_images repository. I would recommend to set this content in a static/images folder. Which is gitignored.
	$url_static					= 'http://static.hamsterpaj.net/';	// URL to the static server.
	
	$environment				= 'development';	//Set to 'development', 'production' or 'test' depending on which environment you want to use.

	$db_server					= ''; // Database server, standard localhost
	$db_username				= ''; // Database username, standard root
	$db_password				= ''; // Database password, leave empty if not configed
	$db_database				= ''; // Database name
	
	$msnbot_salt				= ''; // Msnbot salt, only used in production at the moment.
	
/*
	################################################################
	This is if you wish to create a more secure password. In 
	development environment that seems quite unnecessary to me. 
	And u can keep it as it is. If you edit this, the
	example users for your development-environment won't be working.
	Also note: This is used as the old password system in the prod/
	live environment. Removing it will create problems for old users.
	################################################################
*/
	$password_salt			=	'exempelsalt'; 

	function hamsterpaj_password($password, $version = 1)
	{
		$password_hash = sha1($password . PASSWORD_SALT);
		return $password_hash;
	}
	
/*
	################################################################
		
				EVERYTHING BELOW THIS IS FOR ADVANCED USERS ONLY.
				
		And this part is NOT environment specific. Actually it
		shouldn't even be in this file. Or, really, it should be in
		this file. But the stuff above shouldn't.
	
	################################################################
*/
	define('PATHS_SCRIPTROOT', substr(substr(substr(__FILE__, 0, strrpos(__FILE__, '/')), 0, strrpos(substr(__FILE__, 0, strrpos(__FILE__, '/')), '/')), 0, strrpos(substr(substr(__FILE__, 0, strrpos(__FILE__, '/')), 0, strrpos(substr(__FILE__, 0, strrpos(__FILE__, '/')), '/')), '/') + 1));// Easy, ugly fix giving most people a hard headache. What it does? It finds the webroot even if used from command line (cron)! :D
	define('PATHS_WEBROOT', PATHS_SCRIPTROOT);// This is about to change when we introduce public/
	define('PATHS_INCLUDE', PATHS_SCRIPTROOT . 'include/');
	define('PATHS_LIBRARIES', PATHS_INCLUDE . 'libraries/');
	define('PATHS_VENDORS', PATHS_INCLUDE . 'vendors/');
	define('PATHS_CONFIGS', PATHS_INCLUDE . 'configs/');
	define('PATHS_CRON', PATHS_INCLUDE . 'cron/');
	define('PATHS_CACHE', PATHS_SCRIPTROOT . 'cache/');
	define('PATHS_LOGS', $paths_logs);
	define('PATHS_DYNAMIC_CONTENT', PATHS_SCRIPTROOT . 'dynamic_content/');
	define('PATHS_IMAGES', $paths_images_old);
	define('PATHS_STATIC', $paths_static);
	define('IMAGE_PATH', $paths_images);
	define('IMAGE_URL', $url_images_old);
	define('URL_IMAGES',  $url_images);
	define('STATIC_URL', $url_static);
	define('ENVIRONMENT', $environment);
	define('PASSWORD_SALT', $password_salt);
	define('MSNBOT_SALT', $msnbot_salt);
	
/*
	################################################################
	Those variables are still in use on some places on Hamsterpaj.
	But we should use the constants above instead.
	################################################################
*/

	$hp_path = $_SERVER['DOCUMENT_ROOT'] . '/'; // This is the server path to your application
	$hp_url = 'http://' . $_SERVER['SERVER_NAME'] . '/';

/*
	################################################################
	 You probably don't care about those constants because they 
	 aren't specific for your environment.
	################################################################
*/
	define('USERS_ONLINE_TIMEOUT', 600); // How many seconds since lastaction is a user to displayed "online"? (I think this should be moved to some kind of login.conf.php)
	
	define('TREASURE_ITEM',0); // 1 = TREASURE HUNT IS ON / 0 = TREASURE HUNT IS OFF (Maybe this should be moved to a treasure_item.conf.php?
?>
